<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Android Studio新建/导入第一个工程]]></title>
    <url>%2F2018%2F11%2F14%2FAndroid-Studio%E6%96%B0%E5%BB%BA-%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[终于可以大展身手了。本文着重讲解一下用Android Studio新建和导入工程项目。 新建一个工程目录 直接看图吧，图中有标注。我们的新项目算是建立好了，现在我们来运行一下USB连接手机和电脑，手机在设置里打开“开发者选项”-&gt;“USB调试”。（不同的手机进入开发者选项有所区别，大家自行搜索）点击图中绿色三角图标，在弹出的窗口中选择刚刚连接到电脑的手机，点击ok，静静等候。手机会自动安装上app（有的手机需要手动确认安装），并自动打开。如图，可以看到熟悉的“Hello World!”。 （如果你的三角图标是灰色，请看本章注意事项）大功告成，Android开发已经完全走通了一遍，接下来就看个人的发挥了！大家一起进步呀！。 导入Gradle项目直接在Android Studio的工作页面点击File菜单，选择“New”-&gt;“import project”（当然欢迎页面也有这个选项） 选择你要导入的项目，点击OK，Android Studio会提示我们是在当前窗口打开，还是新建窗口打开，请自行定夺，之后就是等待了，倘若等待过久，一直卡在“Gradle Build Running”请看本章注意事项。 导入moudle当你需要引用别人写好的Android项目中的代码怎么办呢？这里提供三种常用的方案： 1.通过gradle远程依赖下载Jar包，需连外网。gradle依赖可见build.gradle文件中的dependencies {}，implementation/api…等等不做赘述。2.直接导入下载好的Jar包。3.另外就是下载好别人的Android项目，直接离线作为moudle导入。下面详细介绍一下这种导入方式。 导入moudle有两种方式，一是通过AS的工具导入，二是改写配置代码。 AS工具导入 点击File菜单，选择“New”-&gt;“import Moudle”。 选择要导入的moudle目录（若不确定被导入的目录是不是一个正确的mouble，你可以查看本站另一篇文章Android Studo制作一个library moudle）。 打开工程结构窗口，选中当前项目下的主模块（一般默认是app）。切换到dependencies选项卡，点击图中的“+”选择“Module dependency”。 选择moudle，点击ok。成功导入! 代码导入（推荐!!第一种方式的实质就是AS自动生成了代码） 首先打开工程根目录下的setting.gradle，按照下图改写。 打开当前项目下的主模块（一般默认是app）目录下的build.gradle文件，按照下图改写。 导入Eclipse工程导入Eclipse工程，写起来的话，篇幅也很大，这里偷个懒，大家可以去看看这篇博客，写的挺详细的。 Android Studio导入Eclipse项目的两种方法 注意事项]]></content>
      <categories>
        <category>Android</category>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>新建</tag>
        <tag>导入</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android SDK安装配置]]></title>
    <url>%2F2018%2F11%2F14%2FAndroid-SDK%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[概念 SDK tools SDK tools即Google官方推出的SDK工具集合，有安装版和解压版。一个纯净的SDk tools目录如下图，此目录就是Android Studio等IDE要配置的SDK根目录，但是此目录还缺少一些东西，需要SDK Manager和AVD Manager去下载安装。以下介绍的都是SDK的子工具包，将所有的子包综合起来就是名副其实的Android SDK(安卓开发工具集)了。 tools 针对pc平台下使用的工具：比如模拟器，.9patch工具，性能追踪可视化工具traceview；还有Android系统api，针对不同的系统api，对接口和性能做了调整，是Android sdk的核心，所以有时也认为tools就是上面所说的SDK tools（傻傻分不清楚），在SDK Manager中对应图中标记①。 platform-tools 针对pc端和移动端进行交互的一些工具：比如adb工具（通过该工具pc端获取移动端log信息），sqlite3工具（通过该工具查询移动端数据库信息），在SDK Manager中对应图中标记②。 build tools aapt工具，aidl工具和打包工具（apkbuilder,dex工具），在SDK Manager中对应图中标记③。1234aapt编译资源文件得到二进制xml和R.Java aidl工具将aidl文件--Java interface javac：R.java +java interface + application source code+thrid jar-&gt;class.dex文件 apkbuilder：class.dex+binary resouce+other resouce---&gt;xx.apk platform 所有版本的API都存放在这里，统一命名为android-xx。你在写Android代码时调用的android包下的API都来自此。如图中标记④。 source 各版本的API源代码，目录下文件命名与platform一致并与其一一对应⑤。 下载安装 点击下载，Windows系统下有安装版和解压版，选择一种下载。安装版请点击exe程序完成安装，解压版直接解压到一个目录即可。此目录就是Android SDK目录了。 上面下载的工具包还需要完善一下，接下来打开SDK Manager安装一些Android开发必要的资源。哪些必需安装、哪些不必要安装见下图。 &gt;&gt;看不清的图片可在新标签打开查看大图 Android Studio对SDK根目录的改动 有些细心的同学在使用Android Studio编辑工具一段时间后，去手动打开SDK Manager.exe之后会发现它会闪退，怎么都打不开，别慌，这是因为Android Studio对你的sdk目录做了一些改动，尤其是tools目录下的东西。这里大家可以去查看一下这篇博客，有对应的解决方案。 android SDK SDK Manager.exe 无法打开，一闪而过最终解决办法]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android Studio安装配置]]></title>
    <url>%2F2018%2F11%2F13%2FAndroid-Studio%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[前言 Android SDk你装或者不装都可以进行Android Studio(简称AS)的安装配置。只不过装过SDK的且已经用过Android SDK Manager的同志在进行以下配置之后，可能也许大概会遇见一个问题，你会发现你的SDK Manager.exe程序再也打不开了，双击只会闪退。这并不会影响AS的使用，AS3.0之后完全取消了独立的SDK Manager，将其完全整合到内部，一切操作都可以在AS内部完成！Android SDK在AS内部的配置可以查看Andorid Studio常用功能设置。废话说的有点多，下面正文开始。 下载安装 点击链接下载安装，目前最新版本3.2.0。默认是64位的，如果是要32位的，从“选择其他平台“中找到Windows(32-bit)。 下载完成之后，打开安装包首先会提示你选择要安装的组件，“Android Virtual Device”是Android虚拟机，我这里没有选择安装。初次运行设置 打开软件进行配置，会让你选择1.从现有的文件导入设置。2.不导入设置。这里我们选择默认选项（第二项），点击OK进行下一步。 此时会提示你“访问不到SDK的位置”，此时点击cancel，有时会出现“Finding Available SDK…”提示框，请稍等一会进入第三步。 出现欢迎页面，点击next。 提示选择你想要设置(安装)的类型。1.标准设置2.自定义设置。这里推荐选择第二项自定义设置，进入第5步。(事实证明这一步无论选什么都会进入第五不、第六步)。 选择主题样式。这里笔者比较喜欢暗黑风格:-) 自定义安装设置，Android SDK/Android SDK Platform这两项默认必选。然后设置一个Android SDK的目录，以后在AS中下载的SDK都会放在这个目录；后两项看情况勾选，一个是Intel硬件加速、一个是自带的安卓模拟器。(AS的模拟器有点慢，我没有安装，用模拟器的话可以看看Android模拟器推荐) 最终的确认页面，点击Finish，等待安装配置完成。 出现这个页面，AS的安装就大功告成了！Congratulations! 相关推荐Android Studio新建/导入第一个工程]]></content>
      <categories>
        <category>Android</category>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java开发环境配置]]></title>
    <url>%2F2018%2F11%2F13%2FJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[前言 在Java中，类库以包（package）的形式提供，不同版本的Java提供不同的包，以面向特定的应用。Java2平台包括标准版（J2SE）、企业版（J2EE）和微缩版（J2ME）三个版本。 Java SE(Java Platform,Standard Edition)。JavaSE以前称为J2SE.它允许开发和部署在桌面、服务器、嵌入式环境和实施环境中使用的Java应用程序。JavaSE 包括支持Java Ｗeb服务开发的类，并为Java Platform,Enterprise Edition(Java EE)提供基础。 Java EE(Java Platform.Enterprise Edition)。这个版本以前被称为J2EE.企业版本帮助开发和部署可移植、健壮、可伸缩切安全的服务端Java应用。Java EE是在JavaSE的基础上构建的他提供Web 服务、组建模型、管理和通信API.可以用来实现企业级的面向服务体系结构(service-oriented architecture,SOA)和web2.0应用程序。 Java ME(Java Platform,Micro Edition)。Java ME为在移动设备和嵌入式设备（比如手机、PDA、电视机顶盒和打印机）上运行的应用程序提供一个健壮且灵活的环境。Java ME包括灵活的用户界面、健壮的安全模式、许多内置的网络协议以及对于动态下载的连网和离线应用程序的丰富支持。基于Java ME规范的应用程序只需要编写一次，就可以用于许多设备，而且可以利用每个设备的本级功能。 搭建Java开发环境一般需要同时安装JDK和JRE。 JDK：指Java开发工具包Java Development Kit，开发Java程序时必需，JDK里包含一部分公共JRE。JRE：一个Java运行环境Java Runtime Environment，运行已开发的Java程序时所用。 请按照需求安装，本文选取JavaSE JDK8 进行Windows10环境下的安装演示。 下载安装 点击下载链接，进入官网下载页面。依次点击下图中的下载按钮下载JDK。（64位操作系统可安装x86版、x64版，32位操作系统只能安装x86版）。 下载完成后，请自行安装，安装过程中的JDK和JRE的路径请务必记住，在后续的环境配置中需要用到，路径如下图。 配置环境变量 Java环境变量涉及到三个名词：JAVA_HOME、path、classpath。 JAVA_HOME代表JDK安装主目录，path代表JDK下可执行文件目录，classpath代表运行java程序时需要查找class文件的目录。 依据上面的安装步骤，应该这样设置： 依次点击“右键我的电脑” -&gt; “属性” -&gt; “高级系统设置” -&gt; “高级” -&gt; “环境变量”，打开环境变量设置窗口。以下各项，有已存在的环境变量，直接编辑其值，切勿全盘覆盖；不存在的自己新建。 JAVA_HOME：D:\DevelopTools\JAVA\JDK path：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;（注意其中的分号，Windows10有“新建”按钮可忽略分号） classpath：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;（注意最前面的点代表当前路径，JDK1.5之后classpath可忽略）至此，我们已经完成了Java开发环境的安装和配置。 测试 最后，我们来测试一下以上操作是否都已成功生效。打开命令行终端，PowerShell或者CMD等都行。(win+X,A)输入java -version回车、javac等等只要有窗口有类似的输出，即说明我们已经成功了！Congratulations!]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android开发环境配置]]></title>
    <url>%2F2018%2F11%2F13%2FAndroid%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[&gt;&gt;看不清的图片可在新标签打开查看大图 为了便于检索，各小节分篇谈论，请按先后顺序，选择自己需要的部分阅读即可。本文推荐开发IDE使用Android Studio。 站内链接 Java开发环境配置 Android SDK安装配置(&lt;-IDE用Android Studio的话可以直接看3) Android Studio安装配置(&lt;-无需提前安装Android SDK) Android Studio新建/导入第一个工程 Android Studio常用功能设置 Android Studio常见错误处理 Android模拟器推荐 注意事项]]></content>
      <categories>
        <category>Android</category>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>开发环境</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浅谈同步、异步与阻塞、非阻塞]]></title>
    <url>%2F2018%2F11%2F12%2F%E6%B5%85%E8%B0%88%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%E4%B8%8E%E9%98%BB%E5%A1%9E%E3%80%81%E9%9D%9E%E9%98%BB%E5%A1%9E%2F</url>
    <content type="text"><![CDATA[同步与异步同步与异步这两个概念，大多数情况下都是关注消息通信机制 (synchronous communication/ asynchronous communication)。简而言之同步与异步的区分就是看消息通知的差别。 概念描述所谓同步，就是当前线程在发起一个调用时，没有得到结果之前，该调用就不返回。一旦调用返回，此线程就得到返回值了。换句话说，就是由调用者主动等待这个调用的结果。]]></content>
      <categories>
        <category>程序员的自我修养</category>
      </categories>
      <tags>
        <tag>同步</tag>
        <tag>异步</tag>
        <tag>阻塞</tag>
        <tag>非阻塞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[程序员的自我修养]]></title>
    <url>%2F2018%2F11%2F12%2F%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB%2F</url>
    <content type="text"><![CDATA[写在前面无论是笔试、面试还是日常工作中总是会遇到同步、异步、并行、并发、多线程等等的问题，在做简单的项目的时候也不会过于关心这些感念，只管会用就行，其实仔细想想自己对这些概念其实还是没有完全清晰的认识，说了解也了解，总能说上几句听起来不错的话，但是禁不起刨根问底，尤其是再加上阻塞、非阻塞等概念之后，一时间总感觉信息量太大处理不过来。查看了许多前辈的讲解之后对这些东西也有一些浅薄的理解，现在记录下来，日后忘之也好来寻。 汇总链接 计算机网络相关 hexo的next主题个性化教程:打造炫酷网站 操作系统相关hexo的next主题个性化教程:打造炫酷网站 Android相关hexo的next主题个性化教程:打造炫酷网站]]></content>
      <categories>
        <category>程序员的自我修养</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Android Studio,记一次难忘的Error]]></title>
    <url>%2F2018%2F01%2F31%2FAndroid-Studio-%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9A%BE%E5%BF%98%E7%9A%84Error%2F</url>
    <content type="text"><![CDATA[今天打开上周才运行过的Android项目,意想不到的错误出现了： Could not find method ?apply()for arguments [{plugin=com.android.application}]…… 同样的 Gradle报错:Gradle DSL method not found: ‘apply()’…… 当时的环境及版本信息： Android Studio版本3.0 build.gradle(工程根目录) 版本3.0.0 gradle-wrapper.properties:distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip` 点击Message定位到某module下的build.gradle文件的第一行:apply plugin: ‘com.android.application’ 本来以为靠着万能的google就能很快解决问题，结果莫名其妙就耽误了半个下午. 尝试过的解决方案： 删除allprojects后边的生成的多余android {……}，dependencies{……} 更改根目录下build.gradle中的classpath的gradle版本 svn diff/svn update 将Android studio版本降到2.4再尝试上述过程 …… 全军覆没，就差最后一步delete之，然后svn checkout重建项目了。 现在想想真是浪费时间啊，为了增强一下记忆，我把这个错误记下来分享一下。 究极解决方案就是 复制对应moudle下的build.gradle内容，删除掉该build.gradle文件，新建之，粘贴之,最后rebuild一下，应该就没有什么问题了。]]></content>
      <categories>
        <category>Android</category>
        <category>Android Studio</category>
      </categories>
      <tags>
        <tag>Could not find method</tag>
        <tag>Gradle DSL method not found</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[next主题配置透明色等]]></title>
    <url>%2F2018%2F01%2F31%2Fnext%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E9%80%8F%E6%98%8E%E8%89%B2%E7%AD%89%2F</url>
    <content type="text"><![CDATA[写在前面博客搭建基础相关、hexo安装配置、next主题安装配置等可以参考这两篇文章： 从零开始搭建个人博客: 建立博客系列更炫酷的效果看这个: hexo的next主题个性化教程:打造炫酷网站 这篇博文主要对next主题配置做一些简单的补充，我用的主题是Next.Gemini v6.0.0版本，所以本文多是关于此主题背景色的修改等。具体效果可以查看我的博客以下命名可能不准确，同学们可以参照我截的一张图：其他next主题大同小异，找不到修改文件的同学可以留言。 背景色透明文章背景色透明打开文件themes/next/source/css/_schemes/Gemini/index.styl，找到1234567// Post &amp; Comments blocks..post-block &#123; padding: $content-desktop-padding; background: white; box-shadow: $box-shadow-inner; border-radius: $border-radius-inner;&#125; 在其后加入一段：123.post-block &#123; background: rgba(255,255,255,.75) none repeat scroll !important;&#125; Tips：这里学过css的同学都知道rgba的第四个参数是改变透明度的，越接近0透明度越高，大家可以自行选择。之后hexo g，hexo d 打开博客即可看到文章背景板已经变透明了。 评论区背景色透明评论区背景色设置同上 文章背景色透明，进入同一级目录，打开index.styl，与前面不同的是你需要找到.comment{…}，同样的在其后插入刚才一样的代码，注意此处插入的样式名是comment。 头部空隙设置Next.Gemini默认的头部空隙是黑色的，它的配置代码在themes/next/source/css/_variables/base.styl的200多行处1234// Headband// --------------------------------------------------$headband-height = 3px$headband-bg = transparent 在这里调整头部空隙的高度和背景色，我将背景色设置成了透明。 标题区设置标题背景色设置代码在/next/source/css/_schemes/Pisces/_brand.styl，找到123456789101112.site-meta &#123; padding: 20px 0; color: white; background: rgba(0,0,0,.3); +tablet() &#123; box-shadow: 0 0 16px rgba(0,0,0,.5); &#125; +mobile() &#123; box-shadow: 0 0 16px rgba(0,0,0,.5); &#125;&#125; 其中background即为title背景色，我这里是设置成黑色透明。 标题字体设置，在themes/next/source/css/_custom/custom.styl中添加如下代码：12345678@font-face &#123; font-family: simi; src: url('/fonts/simi.otf');&#125;.site-title &#123; font-size: 40px !important; font-family: 'simi' !important;&#125; 侧栏概览设置圆形头像设置在本文开头的 打造炫酷网站。 刚刚设置到这一步的同学看到的侧栏图： 可能看到的不是这个样子，不要急，那是因为你的“分类”和“标签”都还是空的，发一篇文章打上标签并分类，之后hexo g,hexo d就能看见了。 透明背景设置，类似于文章背景色透明，在themes/next/source/css/_schemes/Pisces/_sidebar.styl中找到.sidebar-inner {…}在其后添加上面提过的透明样式代码。这里需要注意一下，有些同学在侧栏开启了”显示当前垂直位置百分比”scrollpercent或者”点击回到顶部”b2t功能之后，会出现下拉到顶部透明才产生作用的现象，此时可以尝试 进入themes/next/source/css/_variables/Gemini.styl将$body-bg-color设置为transparent(透明)。 （scrollpercent、b2t这两个功能在主题配置文件themes/next/_config.yml设置，如下：）]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>next</tag>
        <tag>透明</tag>
      </tags>
  </entry>
</search>
